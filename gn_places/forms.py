# generated by appcreator
from django import forms
from crispy_forms.helper import FormHelper
from crispy_forms.layout import Submit,  Layout, Fieldset, Div, MultiField, HTML
from crispy_forms.bootstrap import Accordion, AccordionGroup

from vocabs.models import SkosConcept
from . models import (
    GeoNamesPlace
)


class GeoNamesPlaceFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(GeoNamesPlaceFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    
                    'gn_id',
                    'gn_name',
                    'gn_lat',
                    'gn_long',
                    'gn_point',
                    'gn_feature_class',
                    'gn_feature_code',
                    'gn_country_code',
                    'gn_cc2',
                    'gn_population',
                    'gn_elevation',
                    'gn_modification_date',
                    css_id="more"
                    ),
                AccordionGroup(
                    'admin',
                    'legacy_id',
                    css_id="admin_search"
                    ),
                )
            )


class GeoNamesPlaceForm(forms.ModelForm):
    gn_feature_class = forms.ModelChoiceField(
        required=False,
        label="Feature Class",
        queryset=SkosConcept.objects.filter(collection__name="gn_feature_class")
    )
    gn_feature_code = forms.ModelChoiceField(
        required=False,
        label="Feature Code",
        queryset=SkosConcept.objects.filter(collection__name="gn_feature_code")
    )
    gn_country_code = forms.ModelChoiceField(
        required=False,
        label="Country Code",
        queryset=SkosConcept.objects.filter(collection__name="gn_country_code")
    )
    gn_cc2 = forms.ModelMultipleChoiceField(
        required=False,
        label="Alternate Country Codes",
        queryset=SkosConcept.objects.filter(collection__name="gn_cc2")
    )

    class Meta:
        model = GeoNamesPlace
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(GeoNamesPlaceForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


